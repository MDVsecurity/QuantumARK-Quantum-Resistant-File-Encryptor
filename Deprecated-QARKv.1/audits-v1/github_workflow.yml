# GitHub Actions workflow para auditorías automatizadas de QuantumARK
# Copiar este archivo a .github/workflows/audit.yml

name: Code Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Ejecutar auditoría completa semanalmente
    - cron: '0 2 * * 1'

jobs:
  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit semgrep safety pip-audit

    - name: Run Bandit
      run: |
        bandit -r . -f json -x audits,venv,.venv,.git > bandit_report.json || true

    - name: Run Semgrep
      run: |
        semgrep --config=auto . --json > semgrep_report.json || true

    - name: Run Safety
      run: |
        safety check --json > safety_report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit_report.json
          semgrep_report.json
          safety_report.json

  quality-audit:
    runs-on: ubuntu-latest
    name: Quality Audit

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint mypy prospector radon flake8 black isort

    - name: Run Pylint
      run: |
        pylint *.py --output-format=json > pylint_report.json || true

    - name: Run MyPy
      run: |
        mypy . > mypy_report.txt || true

    - name: Run Flake8
      run: |
        flake8 . --format=json > flake8_report.json || true

    - name: Check Black formatting
      run: |
        black . --check --diff > black_report.txt || true

    - name: Check isort
      run: |
        isort . --check-only --diff > isort_report.txt || true

    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      with:
        name: quality-reports
        path: |
          pylint_report.json
          mypy_report.txt
          flake8_report.json
          black_report.txt
          isort_report.txt

  test-audit:
    runs-on: ubuntu-latest
    name: Test Coverage Audit

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests with coverage
      run: |
        pytest --cov=. --cov-report=json --cov-report=html || true

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          coverage.json
          htmlcov/

  consolidate-reports:
    runs-on: ubuntu-latest
    name: Consolidate Reports
    needs: [security-audit, quality-audit, test-audit]

    steps:
    - uses: actions/checkout@v4

    - name: Download all reports
      uses: actions/download-artifact@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Generate consolidated report
      run: |
        mkdir -p audits/reports/{security,quality,testing}
        cp security-reports/* audits/reports/security/ || true
        cp quality-reports/* audits/reports/quality/ || true
        cp coverage-reports/* audits/reports/testing/ || true
        python audits/generate_consolidated_report.py

    - name: Upload consolidated report
      uses: actions/upload-artifact@v3
      with:
        name: consolidated-audit-report
        path: audits/reports/consolidated_report.html
